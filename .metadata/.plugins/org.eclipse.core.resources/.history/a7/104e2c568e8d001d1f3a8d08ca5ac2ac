package edu.springz.security;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;

import javax.sql.DataSource;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import edu.springz.persistence.BoardMapperTests;
import lombok.AllArgsConstructor;
import lombok.extern.log4j.Log4j;
import market.util.DBCon;

@RunWith(SpringJUnit4ClassRunner.class) // JUnit으로 단위 테스트 프레임워크 지정
@ContextConfiguration({
	"file:src/main/webapp/WEB-INF/spring/root-context.xml",
	"file:src/main/webapp/WEB-INF/spring/security-context.xml"
	})
@Log4j
@AllArgsConstructor
public class MemberTests {
	private PasswordEncoder pwEncoder;
	private DataSource dataSource;
	
	
	@Test
	public void testInsertMember() {
		//100명의 데이터 등록
		//비밀번호는 1111을 PasswordEncoder로 암호화
		//일반사용자	: user0 ~ user79
		//멤버	: member80 ~ member89
		//관리자	: admin90 ~ admin99
		
		String query = " INSERT INTO tbl_member(id, pw, name) " + "VALUES(?, ?, ?) ";
		
		PreparedStatement pstmt = null;
		
		try(Connection con = dataSource.getConnection()) {
			
			for (int i = 0; i < 100; i++) {
				pstmt = con.prepareStatement(query);
				pstmt.setString(2, pwEncoder.encode("1111"));
			}
//			query = " INSERT INTO BOARD "
//					+ " VALUES(SEQ_BOARD_NUM.NEXTVAL, ?, ?, ?, SYSDATE, ?, ?) ";

			pstmt = DBCon.getConnection().prepareStatement(query);

			pstmt.setString(1, bvo.getUserid());
			pstmt.setString(2, bvo.getSubject());
			pstmt.setString(3, bvo.getContent());
			pstmt.setInt(4, bvo.getHit());
			pstmt.setString(5, bvo.getIP());

			int result = pstmt.executeUpdate();
			if (result == 1) {
				return true;
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				if(pstmt != null) pstmt.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}

		return false;
	}
		
		
		
	}
}
